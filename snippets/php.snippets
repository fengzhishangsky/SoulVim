snippet $
	${1:$variable}${2:, $}${3}
snippet php
	<?php
	${1}
	?>
snippet <?=
	<?php echo ${1:variable};?>
snippet phpl
	<?php ${1}?>
snippet phpe
	<?php ec${1}?>
snippet ec
	echo "${1:string}"${2};
snippet ec$
	echo ${1:$string}${2:, $}${3};
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet $_ GET['...']
	$_GET['${1:variable}']${2}
snippet $_ POST['...']
	$_POST['${1:variable}']${2}
snippet $_ GETI['...']
	(int)$_GET['${1:id}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
snippet class
	/**
	 * ${1}
	 * ${2:some describe}
	 **/
	class ${1:ClassName}
	{
		${3:// comment...}
		public function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}

		${7://comment...}
		public function ${8:__destruct}()
		{
			${9:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet t
	(${1:condition}) ? ${2:a} : ${3:b};${4}
# Tertiary conditional and return Value
snippet tv
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;

		${5:case}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}

	case${4}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet fun
	function ${1:FunctionName}(${2:$})
	{
		// code...
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
snippet var_dump
	var_dump($${1:variable}${2:, var}${3});
snippet var
	${1:$variable}${2:, var}${3}
snippet pub variable
	/**
	 * ${2:describe here}
	 * @var ${3:proType}${4}
	 */
	public $${1:variable};
snippet pub function
	/**
	 * ${1:describe here}
	 * @return ${2:proType}${3}
	 */
	public fun
snippet pub static function
	/**
	 * ${1:describe here}
	 * @return ${2:proType}${3}
	 */
	public static fun

snippet pro variable
	/**
	 * ${2:describe here}
	 * @var ${3:proType}${4}
	 */
	protected $${1:variable};
snippet pro function
	/**
	 * ${1:describe here}
	 * @return ${2:proType}${3}
	 */
	protected fun
snippet pro static function
	/**
	 * ${1:describe here}
	 * @return ${2:proType}${3}
	 */
	protected static fun

snippet pri variable
	/**
	 * ${2:describe here}
	 * @var ${3:proType}${4}
	 */
	private $${1:variable};
snippet pri function
	/**
	 * ${1:describe here}
	 * @return ${2:proType}${3}
	 */
	private fun
snippet pri static function
	/**
	 * ${1:describe here}
	 * @return ${2:proType}${3}
	 */
	private static fun

snippet proType int
	int
snippet proType str
	string
snippet proType arr
	array
snippet proType bool
	bool
snippet proType void
	void
